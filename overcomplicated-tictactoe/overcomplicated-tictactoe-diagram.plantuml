@startuml

title Overcomplicated TicTacToe gaming system - Component Diagram

package "Front End" {
    component [Web Interface] as GUI
}

database "PostgreSQL\n" as DB {
}

cloud "\nInternet\n" as Internet {
}

cloud "\nLocal network\nor\nlocalhost\n" as localhost {
}

node "Web server" as WebServer{
    [GameController]
    [Data Access] as DA
    interface "Routes" as Routes
    interface "Game Model" as Game
}

package "Services" as services{
    node "funfact-service" as funfact {
        interface "API" as FunFactAPI
        [Business Logic] as FunFactLogic
        cloud "Magic" as FunFactMagic
    }
    node "comics-service" as comic {
        interface "API" as ComicAPI
        [Business Logic] as ComicLogic
        cloud "Magic" as ComicMagic
    }
    node "avatar-service" as avatar {
        interface "API" as AvatarAPI
        [Business Logic] as AvatarLogic
        cloud "Magic" as AvatarMagic
    }
    node "tictactoe-ai-service" as ai {
        interface "API" as aiAPI
        [Business Logic] as aiLogic
        cloud "Magic" as aiMagic
    }
}

WebServer -[hidden]left- services
localhost -[hidden]left- WebServer
funfact -[hidden]down- comic
comic -[hidden]down- avatar
avatar -[hidden]down- ai

GUI -down-> Internet
Internet -down-( Routes
GameController -up- Routes
GameController <-left- localhost

localhost -left-( FunFactAPI
FunFactAPI -left- FunFactLogic
FunFactLogic -left- FunFactMagic

localhost -left-( ComicAPI
ComicAPI -left- ComicLogic
ComicLogic -left- ComicMagic

localhost -left-( AvatarAPI
AvatarAPI -left- AvatarLogic
AvatarLogic -left- AvatarMagic

localhost -left-( aiAPI
aiAPI -left- aiLogic
aiLogic -left- aiMagic

DA -up- Game
GameController -right- Game
DA .. DB

@enduml
